// Fibonacci example
// Calculates a fibonacci pair using recursion

procedure fib(int x1, int x2, int n)
    if n = 0 then
        x1 += 1
        x2 += 1
    else
        n -= 1
        call fib(x1, x2, n)
        x1 += x2
        x1 <=> x2
    fi x1 = x2

procedure testfun (int x)
    local int y[4]
    local int z
    z += y[2]
    printf("%d", z)
    delocal int z
    delocal int y[4]

procedure main()
    int x1
    int x2
    int n = 3
    int a[2][3] = {{1,2,3},{4,5,6}}
    int ss = n + 1
    int test[n][n]
    int test2[5]
    int r = 0
    stack stk
    r += size(test)
    n += 4
    call testfun(n)
    test[2][2] <=> test2[2]
    local int x = 1, int y = 2
    local int z[3] = {0}
    push (n+1, stk)
    pop (n+1, stk)
    delocal int z[3] = {0}
    delocal int x = 1, int y = 2
    call fib(x1, x2, n)




// > for-loop sounds good in practice, since I  need the following codelet now and then:
// >
// > local int i = 0
// > from i = 0
// > …
// > loop …
// >         i += 1
// > until i = n
// > delocal int i = n
